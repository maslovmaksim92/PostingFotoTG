from fastapi import FastAPI, Request
from loguru import logger
from pydantic import BaseModel
from dotenv import load_dotenv
import os
import httpx

load_dotenv()

BITRIX_WEBHOOK = os.getenv("BITRIX_WEBHOOK")
BITRIX_FILE_FIELD = "UF_CRM_1740994275251"

app = FastAPI()

class AttachRequest(BaseModel):
    deal_id: int
    folder_id: int


@app.post("/webhook/register_folder")
async def register_folder(data: AttachRequest):
    deal_id = data.deal_id
    folder_id = data.folder_id
    logger.info(f"üì• –ü–æ–ª—É—á–µ–Ω –≤–µ–±—Ö—É–∫: deal={deal_id}, folder={folder_id}")

    async with httpx.AsyncClient() as client:
        # –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
        resp = await client.post(
            f"{BITRIX_WEBHOOK}/disk.folder.getchildren",
            json={"id": folder_id}
        )
        children = resp.json().get("result", [])
        file_ids = [f["ID"] for f in children if f["TYPE"] == "file"]

        logger.info(f"üóé –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(file_ids)} ‚Äî {file_ids}")

        # –û–±–Ω–æ–≤–∏—Ç—å —Å–¥–µ–ª–∫—É ‚Äî –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª—ã
        resp = await client.post(
            f"{BITRIX_WEBHOOK}/crm.deal.update",
            json={
                "id": deal_id,
                "fields": {
                    BITRIX_FILE_FIELD: file_ids
                }
            }
        )

        logger.debug(f"üì§ Bitrix response {resp.status_code}: {resp.text}")

        logger.info(f"‚úÖ –§–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω—ã –∫ —Å–¥–µ–ª–∫–µ {deal_id}")
        return {"status": "ok", "files_attached": len(file_ids)}