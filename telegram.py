import os
import loguru
import httpx
from datetime import datetime
from babel.dates import format_date

TG_BOT_TOKEN = os.getenv("TG_GITHUB_BOT")
TG_CHAT_ID = os.getenv("TG_CHAT_ID")

def build_caption(address: str) -> str:
    today = datetime.now()
    russian_date = format_date(today, format='d MMMM y', locale='ru')
    return (
        f"\U0001F9F9 –£–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞\n"
        f"\U0001F3E0 –ê–¥—Ä–µ—Å: {address or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
        f"\U0001F4C5 –î–∞—Ç–∞: {russian_date}\n"
        f"\n‚úÖ –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ —á–∏—Å—Ç–æ—Ç—É! –í–∞—à –î–æ–º üè†"
    )

async def send_media_group(photos: list, address: str) -> bool:
    if not TG_BOT_TOKEN or not TG_CHAT_ID:
        loguru.logger.error("‚ùå –ù–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è Telegram")
        return False

    caption = build_caption(address)
    media = []

    for idx, photo in enumerate(photos):
        item = {
            "type": "photo",
            "media": photo,
        }
        if idx == 0:
            item["caption"] = caption
            item["parse_mode"] = "HTML"
        media.append(item)

    url = f"https://api.telegram.org/bot{TG_BOT_TOKEN}/sendMediaGroup"
    payload = {
        "chat_id": TG_CHAT_ID,
        "media": media
    }

    try:
        async with httpx.AsyncClient() as client:
            response = await client.post(url, json=payload)
            if response.status_code == 200:
                loguru.logger.success(f"‚úÖ –§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Telegram ({len(photos)} —à—Ç)")
                return True
            else:
                loguru.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {response.text}")
                return False
    except Exception as e:
        loguru.logger.exception("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram")
        return False
