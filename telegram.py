import httpx
import os
from loguru import logger
from babel.dates import format_date
from datetime import datetime
from dotenv import load_dotenv

load_dotenv()

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

async def send_media_group(photo_urls, address):
    if not TELEGRAM_TOKEN or not TELEGRAM_CHAT_ID:
        logger.error("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–∫–µ–Ω –∏–ª–∏ —á–∞—Ç ID Telegram")
        return False

    if not photo_urls:
        logger.error("‚ùå –ù–µ—Ç —Ñ–æ—Ç–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏")
        return False

    today = datetime.now()
    russian_date = format_date(today, format='d MMMM y', locale='ru')

    caption = (
        f"üßπ –£–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞\n"
        f"üè† –ê–¥—Ä–µ—Å: {address or '–ê–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω'}\n"
        f"üìÖ –î–∞—Ç–∞: {russian_date}"
    )

    media = []
    for i, url in enumerate(photo_urls):
        media.append({
            "type": "photo",
            "media": url,
            "caption": caption if i == 0 else "",  # –ü–æ–¥–ø–∏—Å—å —Ç–æ–ª—å–∫–æ –Ω–∞ –ø–µ—Ä–≤–æ–º —Ñ–æ—Ç–æ
            "parse_mode": "HTML"
        })

    send_url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMediaGroup"

    payload = {
        "chat_id": TELEGRAM_CHAT_ID,
        "media": media
    }

    async with httpx.AsyncClient(timeout=30) as client:
        response = await client.post(send_url, json=payload)
        if response.status_code == 200:
            logger.success(f"‚úÖ –§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Telegram ({len(photo_urls)} —à—Ç)")
            return True
        else:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {response.text}")
            return False
