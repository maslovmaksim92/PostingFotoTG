from openai import AsyncOpenAI
import os

client = AsyncOpenAI(api_key=os.getenv("OPENAI_API_KEY"))

# –ë—ã—Å—Ç—Ä—ã–µ –æ—Ç–≤–µ—Ç—ã –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
FAQ = {
    "–æ–±—Ä–µ–º–µ–Ω–µ–Ω–∏": "–û–±—Ä–µ–º–µ–Ω–µ–Ω–∏–π –Ω–µ—Ç. –û–±—ä–µ–∫—Ç –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –û–û–û ¬´–í–∞—à –î–æ–º¬ª.",
    "–∞—Ä–µ–Ω–¥": "–ú—ã –≥–æ—Ç–æ–≤—ã –æ—Å—Ç–∞—Ç—å—Å—è –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–∞–º–∏ –Ω–∞ 3 –≥–æ–¥–∞ –ø–æ —Å—Ç–∞–≤–∫–µ 120 000 ‚ÇΩ/–º–µ—Å. –≠—Ç–æ –æ–±–µ—Å–ø–µ—á–∏—Ç —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥.",
}

# –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ (–≤—à–∏—Ç—å –ø–æ—Å–ª–µ OCR)
SUMMARY = """
üìç –ê–¥—Ä–µ—Å: –ö–∞–ª—É–≥–∞, –ø–µ—Ä. –°–µ–ª—å—Å–∫–∏–π, 8–∞  
üè¢ –ü–ª–æ—â–∞–¥—å: 1089,7 –º¬≤ + 815 –º¬≤ (–∑–µ–º–ª—è)  
üí∞ –¶–µ–Ω–∞: 74 –º–ª–Ω ‚ÇΩ  
üìÉ –î–æ–∫—É–º–µ–Ω—Ç—ã: —Ç–µ—Ö–ø–ª–∞–Ω, –ï–ì–†–ù –Ω–∞ –∑–¥–∞–Ω–∏–µ –∏ –∑–µ–º–ª—é, —Ä–µ–∑—é–º–µ –æ–±—ä–µ–∫—Ç–∞, –°–≤–æ–¥ –ø—Ä–∞–≤–∏–ª 308  
üîê –û–±—Ä–µ–º–µ–Ω–µ–Ω–∏—è: –Ω–µ—Ç  
üì¶ –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª: —Å–¥–∞—á–∞ –≤ –∞—Ä–µ–Ω–¥—É/—Ä–µ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è/–≥–æ—Ç–æ–≤—ã–π –≥–æ—Å—Ç–∏–Ω–∏—á–Ω—ã–π –±–∏–∑–Ω–µ—Å  
"""

FILTER_PROMPT = """
–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –æ—Ç—Å–µ–∏–≤–∞—Ç—å —Å–ª—É—á–∞–π–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–µ—Å–∞–Ω—Ç–æ–≤, –ø–µ—Ä–µ–∫—É–ø—â–∏–∫–æ–≤ –±–µ–∑ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ —Ç–µ—Ö, –∫—Ç–æ –ø–∏—à–µ—Ç "–ø—Ä–æ—Å—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å".  
–†–∞–±–æ—Ç–∞–π **—Ç–æ–ª—å–∫–æ —Å —Ç–µ–º–∏**, –∫—Ç–æ:
- –∏–º–µ–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç —Å –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–º –∏–ª–∏ –∫–ª–∏–µ–Ω—Ç–æ–º,
- –∑–∞–¥–∞—ë—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –æ–±—ä–µ–∫—Ç—É,
- —Å–∞–º –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –∫–æ–º–º–µ—Ä—Ü–∏–µ–π –∏–ª–∏ –±—Ä–æ–∫–µ—Ä.

–ï—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ –ø–æ–¥—Ö–æ–¥–∏—Ç ‚Äî **–¥–∞–≤–∞–π —Å–∏–ª—å–Ω—ã–µ –¥–æ–≤–æ–¥—ã –¥–ª—è –ø–æ–∫—É–ø–∫–∏**: –ª–æ–∫–∞—Ü–∏—è, –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å, –¥–æ–∫—É–º–µ–Ω—Ç—ã, –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä—ã.
"""

async def get_answer(question: str) -> str:
    for k, v in FAQ.items():
        if k in question.lower():
            return v

    prompt = f"""
{SUMMARY}

{FILTER_PROMPT}

–í–æ–ø—Ä–æ—Å –∫–ª–∏–µ–Ω—Ç–∞: {question}
–û—Ç–≤–µ—Ç—å –∫–∞–∫ —É–≤–µ—Ä–µ–Ω–Ω—ã–π –∞–≥–µ–Ω—Ç, —Å —Ñ–∏–ª—å—Ç—Ä–æ–º –Ω–∞ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞. –ö–æ—Ä–æ—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É.
"""
    try:
        response = await client.chat.completions.create(
            model="gpt-4",
            messages=[{"role": "user", "content": prompt}]
        )
        return response.choices[0].message.content.strip()
    except Exception:
        return "üè¢ –û–±—ä–µ–∫—Ç –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏. –î–æ–∫—É–º–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã. –£—Ç–æ—á–Ω–∏—Ç–µ, –≤—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞?"
