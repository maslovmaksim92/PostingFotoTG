import asyncio
import os
from aiogram import Bot, Dispatcher, Router, types
from aiogram.types import Message
from aiogram.enums import ParseMode
from agent_bot.prompts import get_answer

router = Router()
bot = Bot(token=os.getenv("AGENT_BOT_TOKEN"), parse_mode=ParseMode.MARKDOWN)
dp = Dispatcher()

# === –ö–æ–º–∞–Ω–¥—ã ===

@router.message(commands=["start"])
async def cmd_start(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–µ –æ–±—ä–µ–∫—Ç–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –≤ –ö–∞–ª—É–≥–µ.\n\nüè¢ *–ì–æ—Å—Ç–∏–Ω–∏—Ü–∞ 1089 –º¬≤ + –∑–µ–º–ª—è 815 –º¬≤*\nüí∞ *–¶–µ–Ω–∞*: 45,1 –º–ª–Ω ‚ÇΩ\nüìç *–ê–¥—Ä–µ—Å*: –ö–∞–ª—É–≥–∞, –ø–µ—Ä. –°–µ–ª—å—Å–∫–∏–π, 8–∞\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=types.ReplyKeyboardMarkup(
            keyboard=[
                [types.KeyboardButton(text="üìë –ü–æ–ª—É—á–∏—Ç—å –ö–ü")],
                [types.KeyboardButton(text="‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")],
                [types.KeyboardButton(text="üì∑ –§–æ—Ç–æ")],
            ],
            resize_keyboard=True,
        )
    )

@router.message(lambda msg: msg.text == "üìë –ü–æ–ª—É—á–∏—Ç—å –ö–ü")
async def send_pdf(msg: Message):
    await msg.answer("–í–æ—Ç –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è:")
    await bot.send_document(msg.chat.id, types.FSInputFile("agent_bot/templates/Presentation GAB Kaluga.pdf"))

@router.message(lambda msg: msg.text == "üì∑ –§–æ—Ç–æ")
async def send_photos(msg: Message):
    folder = "agent_bot/templates/images"
    media = []
    for filename in os.listdir(folder):
        path = os.path.join(folder, filename)
        media.append(types.InputMediaPhoto(types.FSInputFile(path)))
    await bot.send_media_group(msg.chat.id, media[:10])

@router.message(lambda msg: msg.text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
async def ask(msg: Message):
    await msg.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å:")

@router.message()
async def fallback(msg: Message):
    response = await get_answer(msg.text)
    await msg.answer(response)


async def start_agent_bot():
    dp.include_router(router)
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)
