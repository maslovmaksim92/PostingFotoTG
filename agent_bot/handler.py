import os
import asyncio
from aiogram import Bot, Dispatcher, Router, types, F
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, FSInputFile, InputMediaPhoto
from agent_bot.prompts import get_answer
from loguru import logger

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ ===
bot = Bot(
    token=os.getenv("AGENT_BOT_TOKEN"),
    default=DefaultBotProperties(parse_mode=ParseMode.MARKDOWN)
)
dp = Dispatcher()
router_polling = Router()
dp.include_router(router_polling)

# === –ö–Ω–æ–ø–∫–∏ ===
main_kb = ReplyKeyboardMarkup(
    resize_keyboard=True,
    keyboard=[
        [KeyboardButton(text="üìë –ü–æ–ª—É—á–∏—Ç—å –ö–ü")],
        [KeyboardButton(text="üì∑ –§–æ—Ç–æ –æ–±—ä–µ–∫—Ç–∞")],
        [KeyboardButton(text="üì© –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")],
        [KeyboardButton(text="‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")],
    ]
)

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ===

@router_polling.message(F.text.lower() == "/start")
async def start_handler(msg: Message):
    logger.info(f"‚ñ∂Ô∏è /start –æ—Ç {msg.from_user.id}")
    await msg.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–µ –æ–±—ä–µ–∫—Ç–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –≤ –ö–∞–ª—É–≥–µ.\n\n"
        "üè¢ *–ì–æ—Å—Ç–∏–Ω–∏—Ü–∞ 1089 –º¬≤ + –∑–µ–º–ª—è 815 –º¬≤*\n"
        "üí∞ *–¶–µ–Ω–∞*: 45,1 –º–ª–Ω ‚ÇΩ\n"
        "üìç *–ê–¥—Ä–µ—Å*: –ö–∞–ª—É–≥–∞, –ø–µ—Ä. –°–µ–ª—å—Å–∫–∏–π, 8–∞\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_kb
    )

@router_polling.message(F.text == "üìë –ü–æ–ª—É—á–∏—Ç—å –ö–ü")
async def send_presentation(msg: Message):
    logger.info(f"üìë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {msg.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é")
    pdf_path = "agent_bot/templates/Presentation GAB Kaluga.pdf"
    await msg.answer("–í–æ—Ç –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞:")
    await msg.answer_document(FSInputFile(pdf_path))

@router_polling.message(F.text == "üì∑ –§–æ—Ç–æ –æ–±—ä–µ–∫—Ç–∞")
async def send_photos(msg: Message):
    logger.info(f"üì∑ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {msg.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª —Ñ–æ—Ç–æ")
    folder = "agent_bot/images"
    if not os.path.exists(folder):
        await msg.answer("‚ùå –ü–∞–ø–∫–∞ —Å —Ñ–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    photos = []
    for fname in os.listdir(folder):
        if fname.lower().endswith((".jpg", ".png", ".jpeg")):
            file_path = os.path.join(folder, fname)
            photos.append(InputMediaPhoto(media=FSInputFile(file_path)))
    if photos:
        await msg.answer_media_group(photos[:10])
    else:
        await msg.answer("üìÇ –§–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")

@router_polling.message(F.text == "üì© –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")
async def send_contact_form(msg: Message):
    logger.info(f"üì© –ó–∞—è–≤–∫–∞ –æ—Ç {msg.from_user.id}")
    full_name = msg.from_user.full_name
    user_id = msg.from_user.id
    text = (
        f"üì• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n\n"
        f"üë§ –ò–º—è: {full_name}\n"
        f"üÜî Telegram ID: {user_id}\n"
        f"üì® Username: @{msg.from_user.username or '–Ω–µ—Ç'}\n\n"
        f"üìù –ù–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏!"
    )
    await bot.send_message(chat_id=os.getenv("TG_CHAT_ID"), text=text)
    await msg.answer("‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è.")

@router_polling.message(F.text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
async def ask_question_prompt(msg: Message):
    logger.info(f"‚ùì –ü–æ–¥—Å–∫–∞–∑–∫–∞ –æ—Ç –±–æ—Ç–∞ –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞ –æ—Ç {msg.from_user.id}")
    await msg.answer("üß† –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å ‚Äî —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å.")

# üß† –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å
@router_polling.message(F.text)
async def process_question(msg: Message):
    if not msg.text:
        await msg.answer("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç.")
        return
    logger.info(f"üß† –í–æ–ø—Ä–æ—Å –æ—Ç {msg.from_user.id}: {msg.text}")
    answer = await get_answer(msg.text)
    await msg.answer(answer)
