from loguru import logger
import aiohttp
from typing import List, Optional

from config import settings


async def send_message(text: str) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram-—á–∞—Ç
    """
    url = f"https://api.telegram.org/bot{settings.TG_GITHUB_BOT}/sendMessage"
    payload = {
        "chat_id": settings.TG_CHAT_ID,
        "text": text,
        "parse_mode": "HTML",
    }
    async with aiohttp.ClientSession() as session:
        async with session.post(url, json=payload) as response:
            result = await response.json()
            if not result.get("ok"):
                logger.error(f"Telegram API error: {result}")
            else:
                logger.info("üì§ –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram")


async def send_photo(photo_urls: List[str], caption: Optional[str] = None) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø–∏—Å–∫–∞ —Ñ–æ—Ç–æ –≤ Telegram —Å –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π –ø–æ–¥–ø–∏—Å—å—é
    """
    if not photo_urls:
        logger.warning("–ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ, –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram –ø—Ä–æ–ø—É—â–µ–Ω–∞")
        return

    async with aiohttp.ClientSession() as session:
        for idx, photo_url in enumerate(photo_urls):
            payload = {
                "chat_id": settings.TG_CHAT_ID,
                "photo": photo_url,
            }
            if idx == 0 and caption:
                payload["caption"] = caption
                payload["parse_mode"] = "HTML"

            async with session.post(
                f"https://api.telegram.org/bot{settings.TG_GITHUB_BOT}/sendPhoto",
                data=payload,
            ) as response:
                result = await response.json()
                if not result.get("ok"):
                    logger.error(f"Telegram API photo error: {result}")
                else:
                    logger.info(f"üì∏ –§–æ—Ç–æ {idx + 1}/{len(photo_urls)} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")