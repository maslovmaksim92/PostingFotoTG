import os
import random
from openai import AsyncOpenAI
from loguru import logger

OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
client = AsyncOpenAI(api_key=OPENAI_API_KEY)

REVIEW_LINKS = [
    "https://yandex.ru/profile/81116139636?lang=ru",
    "https://www.kaluga-poisk.ru/catalog/objects/vash-dom-kaluga",
    "https://2gis.ru/kaluga/firm/70000001064313692",
    "https://zoon.ru/kaluga/building/obsluzhivanie_mnogokvartirnyh_domov_vash_dom_v_moskovskom_rajone/",
]

PROMPT_TEMPLATE = """
–¢—ã ‚Äî —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç –æ—Ç –∏–º–µ–Ω–∏ –∫–ª–∏–Ω–∏–Ω–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é—â–∏–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ –∏–Ω—Ñ–æ—Ä–º–∏—Ä—É—é—â–∏–π –∫–ª–∏–µ–Ω—Ç–æ–≤ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —É–±–æ—Ä–∫–∏.
–ó–∞–¥–∞—á–∞: –ø–æ –∫–∞–∂–¥–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π —Ç–µ–∫—Å—Ç. –í –Ω–µ–º –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å:
- –º–æ—Ç–∏–≤–∞—Ü–∏—è —Ç—Ä—É–¥–∞ (–≤–¥–æ—Ö–Ω–æ–≤–ª—è–π –∫–æ–º–∞–Ω–¥—É),
- –∫–æ—Ä–æ—Ç–∫–∏–π —Å—Ç–∏—à–æ–∫ –∏–ª–∏ —Ä–∏—Ñ–º–∞ –ø—Ä–æ —á–∏—Å—Ç–æ—Ç—É, –ø–æ—Ä—è–¥–æ–∫, –ø–æ–ª—å–∑—É,
- –ª—ë–≥–∫–∏–π —é–º–æ—Ä, –Ω–æ —É–º–µ—Å—Ç–Ω–æ,
- –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –±—Ä–∏–≥–∞–¥–µ (1 –±—Ä–∏–≥–∞–¥–∞, 2 –∏ —Ç.–¥.),
- –Ω–µ–º–Ω–æ–≥–æ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏ –æ —Ç—Ä—É–¥–µ –∏–ª–∏ –≤–∞–∂–Ω–æ—Å—Ç–∏ —á–∏—Å—Ç–æ—Ç—ã.

–ï—Å–ª–∏ —Ö–æ—á–µ—à—å, –ø—Ä–∏–º–µ—Ä–Ω–æ —Ä–∞–∑ –≤ 10 —Å–æ–æ–±—â–µ–Ω–∏–π –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–∑—ã–≤ –∫ –æ—Ç–∑—ã–≤–∞–º ‚Äî –Ω–æ –Ω–µ –≤—Å–µ–≥–¥–∞.
–ï—Å–ª–∏ –¥–æ–±–∞–≤–ª—è–µ—à—å ‚Äî –≤—ã–±–µ—Ä–∏ 1‚Äì2 —Å—Å—ã–ª–∫–∏ –∏ –≤—Å—Ç–∞–≤—å –∏—Ö –≤–Ω–∏–∑—É:
{review_section}

–§–æ—Ä–º–∞—Ç:
---
üßπ –£–±–æ—Ä–∫–∞ –ø–æ–¥—ä–µ–∑–¥–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞  
üè† –ê–¥—Ä–µ—Å: {address}  
üìÖ –î–∞—Ç–∞: {date}  
üßë‚Äçüîß –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π: {name}  
üõ† –ë—Ä–∏–≥–∞–¥–∞: {team}  

‚úâÔ∏è –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç –±–æ—Ç–∞:
"""


async def generate_message(address: str, date: str, name: str, team: str) -> str:
    review_section = ""
    if random.randint(1, 10) == 1:
        review_section = "\n–ï—Å–ª–∏ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å ‚Äî –±—É–¥–µ–º —Ä–∞–¥—ã –≤–∞—à–µ–º—É –æ—Ç–∑—ã–≤—É:\n" + "\n".join(random.sample(REVIEW_LINKS, 2))

    prompt = PROMPT_TEMPLATE.format(address=address, date=date, name=name, team=team, review_section=review_section)
    logger.debug(f"üì® GPT PROMPT:\n{prompt}")

    try:
        completion = await client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[{"role": "user", "content": prompt}],
            temperature=1.1,
            max_tokens=600
        )
        message = completion.choices[0].message.content.strip()
        logger.info(f"üß† GPT —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª: {message}")
        return message
    except Exception as e:
        logger.error(f"GPT –æ—à–∏–±–∫–∞: {e}")
        return "\u2709Ô∏è –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ù–æ –º—ã —Ü–µ–Ω–∏–º –≤–∞—à —Ç—Ä—É–¥!"