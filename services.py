from bitrix import get_files_from_folder, attach_media_to_deal, get_address_from_deal, get_deal_fields
from telegram import send_media_group
from utils import fallback_text
from loguru import logger
import httpx
import io
import random
import datetime


async def send_report(deal_id: int, folder_id: int):
    logger.info(f"üì¶ –ù–∞—á–∞–ª–æ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á—ë—Ç–∞ –¥–ª—è —Å–¥–µ–ª–∫–∏ {deal_id}")

    files = await get_files_from_folder(folder_id)
    if not files:
        logger.warning(f"‚ö†Ô∏è –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Å–¥–µ–ª–∫–∏ {deal_id}, –ø–∞–ø–∫–∞ {folder_id}")
        return

    logger.info(f"üìÅ –ü–æ–ª—É—á–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(files)}. –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É media_group –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É ID")
    bitrix_group = files.copy()
    media_group = []
    for file in files:
        if not file.get("url"):
            continue
        try:
            async with httpx.AsyncClient() as client:
                response = await client.get(file["url"])
                response.raise_for_status()
                media_group.append({
                    "file": io.BytesIO(response.content),
                    "filename": file["name"],
                    "id": file.get("id")
                })
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ {file['name']}: {e}")

    if not media_group:
        logger.warning("‚ö†Ô∏è –°–ø–∏—Å–æ–∫ media_group –ø—É—Å—Ç –ø–æ—Å–ª–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è")
        return

    logger.info("üìé –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º ID —Ñ–∞–π–ª–æ–≤ –∫ —Å–¥–µ–ª–∫–µ...")
    await attach_media_to_deal(deal_id, bitrix_group, folder_id)

    address = await get_address_from_deal(deal_id)
    header = f"üßπ –£–±–æ—Ä–∫–∞ –ø–æ–¥—ä–µ–∑–¥–æ–≤ –ø–æ –∞–¥—Ä–µ—Å—É: *{address}* –∑–∞–≤–µ—Ä—à–µ–Ω–∞."

    deal = await get_deal_fields(deal_id)
    brigada = deal.get("UF_CRM_1741590925181") or "–ë—Ä–∏–≥–∞–¥–∞ [–Ω–µ —É–∫–∞–∑–∞–Ω–∞]"
    team_line = f"üë∑ –£–±–æ—Ä–∫—É –ø—Ä–æ–≤–µ–ª–∞: *{brigada}*"

    now = datetime.datetime.now().strftime("%H:%M")
    bait = f"üí¨ –°–ø–∞—Å–∏–±–æ {brigada} –∑–∞ —Ä–∞–±–æ—Ç—É –≤ {now}! –ß–∏—Å—Ç–æ—Ç–∞ ‚Äî —ç—Ç–æ —Å—Ç–∏–ª—å –∂–∏–∑–Ω–∏. #–ß–∏—Å—Ç–æ–í—Å—ë"
    caption = f"{header}\n{team_line}\n\n{bait}"

    logger.info("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –≤ Telegram –ø–∞–∫–µ—Ç–∞–º–∏ –ø–æ 10")
    for i in range(0, len(media_group), 10):
        group = media_group[i:i + 10]
        cap = caption if i == 0 else None
        await send_media_group(group, cap)

    logger.info(f"‚úÖ –û—Ç—á—ë—Ç –ø–æ —Å–¥–µ–ª–∫–µ {deal_id} –∑–∞–≤–µ—Ä—à—ë–Ω: {len(media_group)} —Ñ–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã, –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω—ã –∫ Bitrix")